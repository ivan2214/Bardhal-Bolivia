---
interface Props {
  img: string
}
const { img } = Astro.props
---

<!-- Small Modal -->
<div
  id='small-modal'
  tabindex='-1'
  class='fixed top-0 left-0 right-0 z-50 hidden flex items-center justify-center w-full h-full p-4 overflow-x-hidden overflow-y-auto md:inset-0'
>
  <div class='absolute inset-0 bg-gray-900 bg-opacity-70 backdrop-filter backdrop-blur-lg'></div>
  <div class='relative w-full max-w-md'>
    <!-- Modal content -->
    <div class='relative bg-white rounded-lg shadow dark:bg-gray-700'>
      <!-- Modal header -->
      <div class='flex items-center justify-between p-5 border-b rounded-t dark:border-gray-600'>
        <button
          type='button'
          class='text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white'
          data-modal-hide='small-modal'
        >
          <svg
            aria-hidden='true'
            class='w-5 h-5'
            fill='currentColor'
            viewBox='0 0 20 20'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              fill-rule='evenodd'
              d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'
              clip-rule='evenodd'></path>
          </svg>
          <span class='sr-only'>Close modal</span>
        </button>
      </div>
      <!-- Modal body -->
      <div class='p-6 space-y-6'>
        <img height='50' height='50' loading='lazy' src={img} alt={img} />
      </div>
    </div>
  </div>
</div>

<script>
  // Función para abrir el modal
  const imgOpen = document.getElementById('imgOpenModal')
  imgOpen.addEventListener('click', openModal)

  function openModal() {
    const modal = document.getElementById('small-modal')
    console.log('click')
    modal.classList?.remove('hidden')
    document.body.classList.add('overflow-hidden')

    // Agregar event listener para cerrar modal al hacer clic fuera de él
    modal.addEventListener('click', (event) => {
      // Verificar si se hizo clic fuera del contenido del modal
      if (event.target !== 'small-modal') {
        closeModal('small-modal')
      }
    })

    // Agregar event listener para cerrar modal al presionar la tecla "Esc"
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        closeModal('small-modal')
      }
    })
  }

  // Función para cerrar el modal
  function closeModal(modalId) {
    const modal = document.getElementById(modalId)
    modal.classList.add('hidden')
    document.body.classList.remove('overflow-hidden')
  }

  // Agrega event listeners a los botones de cierre del modal
  const closeButtons = document.querySelectorAll('[data-modal-hide]')
  closeButtons.forEach((button) => {
    const modalId = button.getAttribute('data-modal-hide')
    button.addEventListener('click', () => {
      closeModal(modalId)
    })
  })
</script>
